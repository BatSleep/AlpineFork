plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}

ext {
    typetoolsVersion   = '0.6.3'
    fastutilVersion    = '8.5.12'
    annotationsVersion = '24.0.1'
    mockitoVersion     = '5.3.1'
    junitVersion       = '5.9.3'
}

group 'com.github.ZeroMemes'
version '3.0.0-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
        }
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    into('META-INF') {
        from 'LICENSE'
    }
    manifest {
        attributes([
            'Automatic-Module-Name': 'me.zero.alpine'
        ], 'Alpine')
    }
}

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

dependencies {
    implementation "net.jodah:typetools:$typetoolsVersion"
    api "it.unimi.dsi:fastutil:$fastutilVersion"
    implementation "org.jetbrains:annotations:$annotationsVersion"

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

// Use Java 17 for running tests (Latest LTS version)
// This allows @BeforeAll usage in @Nested test classes (Added in 16)
test {
    useJUnitPlatform()
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileTestJava {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Setup report for test coverage
jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}
check.dependsOn jacocoTestReport

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Alpine'
                description = 'A lightweight, pub/sub event system for Java 8+'
                url = 'https://github.com/ZeroMemes/Alpine'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/ZeroMemes/Alpine/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'ZeroMemes'
                        name = 'Brady Hahn'
                        email = 'zeromemesdev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ZeroMemes/Alpine.git'
                    url = 'https://github.com/ZeroMemes/Alpine'
                }
            }
        }
    }

    repositories {
        maven {
            if (System.env.MAVEN_DIR) {
                url = 'file://' + System.env.MAVEN_DIR
            } else {
                url = layout.buildDirectory.dir('repo')
            }
        }
        maven {
            name = 'GitHubPackages'
            url = 'https://maven.pkg.github.com/ZeroMemes/Alpine'
            credentials {
                username = System.getenv('GITHUB_ACTOR')
                password = System.getenv('GITHUB_TOKEN')
            }
        }
    }
}
